#!/bin/bash -e

<% require "shellwords" %>

RUN_DIR=/var/vcap/sys/run/vps
LOG_DIR=/var/vcap/sys/log/vps
CONF_DIR=/var/vcap/jobs/vps/config

PIDFILE=$RUN_DIR/vps.pid

export GOMAXPROCS=$(nproc)

<% if p("vps.tls.required") %>
  url_scheme="https"
  vps_sec_flags=" \
   --scheme https \
   --tls-host=<%= p("vps.tls.host") %> \
   --tls-port=<%= p("vps.tls.port") %> \
   --tls-certificate=${CONF_DIR}/certs/server.pem \
   --tls-key=${CONF_DIR}/certs/server.key"
<% end %>

<%
    def db_params
      ['username', 'password', 'host', 'port', 'schema'].map {|name| "vps.sql.db_#{name}"}
    end

    def param_exists? param
      p(param) != ""
    end

    def connection_string_from_db_params
      return "" unless db_params.any? {|p| param_exists?(p)}

      unless db_params.all? {|p| param_exists?(p)}
        raise "all of the following parameters must be specified #{db_params.join(",")}"
      end

      values = db_params.map {|param| p(param)}
      # Note: order of the params is important here, it has to be username, password, host, port, schema in that order
      driver = p("vps.sql.db_driver")
      if driver == "postgres"
        sprintf "postgres://%s:%s@%s:%s/%s", *values
      else
        raise "unknown driver #{driver}"
      end
    end

    connection_string = p('vps.sql.db_connection_string')

    if connection_string != "" && connection_string_from_db_params != ""
       raise "You can only specify 'vps.sql.db_connection_string' or '#{db_params.join(",")}'"
    end

    if connection_string == ""
       connection_string = connection_string_from_db_params
    end
%>

/var/vcap/packages/vps/bin/vps \
  --logLevel=<%= p("vps.log_level") %> \
  <% if p("vps.tls.required") %>
    ${vps_sec_flags}
  <% else %>
    --host=<%= p("vps.host") %> \
    --port=<%= p("vps.port") %> \
  <% end %>
  --databaseDriver=<%= p("vps.sql.db_driver") %> \
  --databaseConnectionString=<%= Shellwords.shellescape(connection_string) %> \
  2> >(tee -a $LOG_DIR/vps.stderr.log | logger -p user.error -t vcap.vps) \
  1> >(tee -a $LOG_DIR/vps.stdout.log | logger -p user.info -t vcap.vps) & echo $! > $PIDFILE
